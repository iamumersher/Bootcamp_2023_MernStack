{"ast":null,"code":"var _jsxFileName = \"/Users/umersher/Desktop/React/apifecth/tempapi/src/components/Dropdownmenu.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dropdownmenu() {\n  _s();\n  const countries_cities = [{\n    country_name: \"Select Country\",\n    value: \"\"\n  }, {\n    country_name: \"pakistan\",\n    value: \"pakistan\",\n    cities: [\"karachi\", \"islamabad\", \"lahore\"]\n  }, {\n    country_name: \"usa\",\n    value: \"usa\",\n    cities: [\"chicago\", \"houston\", \"new york\"]\n  }];\n  const [countries, setCountries] = useState(\"countries\");\n  const [cities, setCities] = useState([\"\"]);\n  const [city, setCity] = useState(\"select city\");\n  const [result, setresult] = useState(\"\");\n  function selctcountry(event) {\n    setCountries(event.target.value);\n    const selectedCities = countries_cities.find(data => data.value && data.value === event.target.value);\n    if (selectedCities) {\n      setCities(selectedCities.cities);\n    }\n    console.log(cities);\n  }\n  function weatherapicall(event) {\n    setCity(event.target.value);\n    if (event.target.value) {\n      fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&appid=cd0aab3ba61e4af27742fa6aa6fd4cdd\").then(response => response.json()).then(data => {\n        const cel = data.main.temp - 273.15;\n        setresult(\"Weather of \" + city + \" is : \" + parseInt(cel) + \" C°\");\n      }).catch(error => console.log(error));\n      console.log(event.target.value);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: countries,\n      onChange: selctcountry,\n      children: countries_cities.map((key, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key.value,\n          children: key.country_name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: city,\n      onChange: weatherapicall,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), cities.map((key, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: key,\n        children: key\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Dropdownmenu, \"rSzzP2Pg8Ul0wywnDwYgtqeXt8U=\");\n_c = Dropdownmenu;\nexport default Dropdownmenu;\nvar _c;\n$RefreshReg$(_c, \"Dropdownmenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Dropdownmenu","_s","countries_cities","country_name","value","cities","countries","setCountries","setCities","city","setCity","result","setresult","selctcountry","event","target","selectedCities","find","data","console","log","weatherapicall","fetch","then","response","json","cel","main","temp","parseInt","catch","error","children","onChange","map","key","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/umersher/Desktop/React/apifecth/tempapi/src/components/Dropdownmenu.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nfunction Dropdownmenu(){\n    const countries_cities =[\n        { country_name: \"Select Country\" ,value:\"\"},\n       { country_name: \"pakistan\" ,value:\"pakistan\" , cities:[\"karachi\",\"islamabad\",\"lahore\"]},\n       { country_name: \"usa\" ,value:\"usa\" , cities:[\"chicago\",\"houston\",\"new york\"]}\n\n    ];\n    const[countries,setCountries] = useState(\"countries\");\n    const[cities,setCities]=useState([\"\"]);\n    const[city,setCity]=useState(\"select city\");\n    const[result,setresult]=useState(\"\");\n\nfunction selctcountry(event){\n setCountries(event.target.value);\n const selectedCities = countries_cities.find(data=> data.value && data.value===event.target.value);\n if(selectedCities){\n setCities(selectedCities.cities);\n }\n console.log(cities);\n}\nfunction weatherapicall(event){\n    setCity(event.target.value);\n    if(event.target.value){\n\n\n        fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\"+city+\"&appid=cd0aab3ba61e4af27742fa6aa6fd4cdd\").then((response)=>response.json()).then((data)=>{\n                 const cel=data.main.temp-273.15;\n                 setresult(\"Weather of \"+city+\" is : \"+parseInt(cel)+\" C°\");\n            \n            \n            \n            }).catch((error)=>console.log(error));\n            console.log(event.target.value);\n                    \n    }\n}\n\n    return(\n        <>\n<select value={countries} onChange={selctcountry}>\n   \n    {countries_cities.map((key,i)=>{\n        \n        return (<option key={i} value={key.value}>{key.country_name}</option>)\n        \n})\n}\n\n\n</select>\n<select value={city} onChange={weatherapicall} >\n    <option value={\"\"}>Select city</option>\n    {cities.map((key,i)=>(<option key={i} value={key}>{key}</option>))}\n\n\n</select>\n<h1>{result}</h1>\n</>\n        );\n}\nexport default Dropdownmenu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}