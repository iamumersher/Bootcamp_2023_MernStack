{"ast":null,"code":"var _jsxFileName = \"/Users/umersher/Desktop/React/apifecth/tempapi/src/components/Dropdownmenu.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dropdownmenu() {\n  _s();\n  const countries_cities = [{\n    country_name: \"pakistan\",\n    value: \"pakistan\",\n    cities: [\"karachi|Karachi\", \"islamabad|Islamabad\", \"lahore|Lahore\"]\n  }, {\n    country_name: \"usa\",\n    value: \"usa\",\n    cities: [\"chicago|Chicago\", \"houston|Houston\", \"new york|New York\"]\n  }];\n  const [countries, setCountries] = useState(\"countries\");\n  const [cities, setCities] = useState(\"cities\");\n  function weatherapicall(event) {\n    setCountries(event.target.value);\n    setCities(countries_cities.find(data => data.value === event.target.value).cities);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: countries,\n      defaultValue: \"default\",\n      onChange: weatherapicall,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        children: \"select country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), countries_cities.map((key, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: key.value,\n        children: key.country_name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 37\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: cities,\n      children: cities.map((key, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: key.cities,\n        children: key.cities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Dropdownmenu, \"8JjnMKkfjmTzJ17+F1kxDuSv8MA=\");\n_c = Dropdownmenu;\nexport default Dropdownmenu;\nvar _c;\n$RefreshReg$(_c, \"Dropdownmenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Dropdownmenu","_s","countries_cities","country_name","value","cities","countries","setCountries","setCities","weatherapicall","event","target","find","data","children","defaultValue","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","key","i","_c","$RefreshReg$"],"sources":["/Users/umersher/Desktop/React/apifecth/tempapi/src/components/Dropdownmenu.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nfunction Dropdownmenu(){\n    const countries_cities =[\n       { country_name: \"pakistan\" ,value:\"pakistan\" , cities:[\"karachi|Karachi\",\"islamabad|Islamabad\",\"lahore|Lahore\"]},\n       { country_name: \"usa\" ,value:\"usa\" , cities:[\"chicago|Chicago\",\"houston|Houston\",\"new york|New York\"]}\n\n    ];\n    const[countries,setCountries] = useState(\"countries\");\n    const[cities,setCities]=useState(\"cities\");\n\nfunction weatherapicall(event){\n setCountries(event.target.value);\n setCities(countries_cities.find(data=>data.value===event.target.value).cities);\n}\n\n    return(\n        <>\n<select value={countries} defaultValue={\"default\"} onChange={weatherapicall}>\n    <option  value={\"default\"} >select country</option>\n    {countries_cities.map((key,i)=>(<option key={i} value={key.value}>{key.country_name}</option>))}\n\n\n</select>\n<select value={cities}>\n    {cities.map((key,i)=>(<option value={key.cities} >{key.cities}</option>))}\n\n</select>\n\n</>\n        );\n}\nexport default Dropdownmenu;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EACnB,MAAMC,gBAAgB,GAAE,CACrB;IAAEC,YAAY,EAAE,UAAU;IAAEC,KAAK,EAAC,UAAU;IAAGC,MAAM,EAAC,CAAC,iBAAiB,EAAC,qBAAqB,EAAC,eAAe;EAAC,CAAC,EAChH;IAAEF,YAAY,EAAE,KAAK;IAAEC,KAAK,EAAC,KAAK;IAAGC,MAAM,EAAC,CAAC,iBAAiB,EAAC,iBAAiB,EAAC,mBAAmB;EAAC,CAAC,CAExG;EACD,MAAK,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,WAAW,CAAC;EACrD,MAAK,CAACU,MAAM,EAACG,SAAS,CAAC,GAACb,QAAQ,CAAC,QAAQ,CAAC;EAE9C,SAASc,cAAcA,CAACC,KAAK,EAAC;IAC7BH,YAAY,CAACG,KAAK,CAACC,MAAM,CAACP,KAAK,CAAC;IAChCI,SAAS,CAACN,gBAAgB,CAACU,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACT,KAAK,KAAGM,KAAK,CAACC,MAAM,CAACP,KAAK,CAAC,CAACC,MAAM,CAAC;EAC/E;EAEI,oBACIR,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACRjB,OAAA;MAAQO,KAAK,EAAEE,SAAU;MAACS,YAAY,EAAE,SAAU;MAACC,QAAQ,EAAEP,cAAe;MAAAK,QAAA,gBACxEjB,OAAA;QAASO,KAAK,EAAE,SAAU;QAAAU,QAAA,EAAE;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAClDlB,gBAAgB,CAACmB,GAAG,CAAC,CAACC,GAAG,EAACC,CAAC,kBAAI1B,OAAA;QAAgBO,KAAK,EAAEkB,GAAG,CAAClB,KAAM;QAAAU,QAAA,EAAEQ,GAAG,CAACnB;MAAY,GAAtCoB,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAgD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAG1F,eACTvB,OAAA;MAAQO,KAAK,EAAEC,MAAO;MAAAS,QAAA,EACjBT,MAAM,CAACgB,GAAG,CAAC,CAACC,GAAG,EAACC,CAAC,kBAAI1B,OAAA;QAAQO,KAAK,EAAEkB,GAAG,CAACjB,MAAO;QAAAS,QAAA,EAAGQ,GAAG,CAACjB;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEpE;EAAA,gBAEN;AAEH;AAACnB,EAAA,CA7BQD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA8BrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}